{"version":3,"sources":["meteor://ðŸ’»app/lib/router.js"],"names":[],"mappings":"yfile":"/lib/router.js","sourcesContent":["Router.configure({\n  // we use the  appBody template to define the layout for the entire app\n  layoutTemplate: 'appBody',\n\n  // the appNotFound template is used for unknown routes and missing lists\n  notFoundTemplate: 'appNotFound',\n\n  // show the appLoading template whilst the subscriptions below load their data\n  loadingTemplate: 'appLoading',\n\n  // wait on the following subscriptions before rendering the page to ensure\n  // the data it's expecting is present\n  waitOn: function() {\n    return [\n      Meteor.subscribe('publicLists'),\n      Meteor.subscribe('privateLists')\n    ];\n  }\n});\n\ndataReadyHold = null;\n\nif (Meteor.isClient) {\n  // Keep showing the launch screen on mobile devices until we have loaded\n  // the app's data\n  dataReadyHold = LaunchScreen.hold();\n\n  // Show the loading screen on desktop\n  Router.onBeforeAction('loading', {except: ['signup', 'signin', 'verifyEmail', 'verifikasi']});\n  Router.onBeforeAction('dataNotFound', {except: ['signup', 'signin', 'verifyEmail', 'verifikasi']});\n}\n\nRouter.route('signup', {\n  onBeforeAction: function () {\n    this.todosHandle = Meteor.subscribe('userData');\n\n    if (this.ready()) {\n      // Handle for launch screen defined in app-body.js\n      dataReadyHold.release();\n    }\n  }\n});\nRouter.route('signin', {\n  // onBeforeAction: function () {\n  //   this.todosHandle = Meteor.subscribe('user');\n\n  //   if (this.ready()) {\n  //     // Handle for launch screen defined in app-body.js\n  //     dataReadyHold.release();\n  //   }\n  // }\n});\nRouter.route('verifikasi');\n\nRouter.route('listsStart',{\n    path: '/start/:_id',\n    // subscribe to todos before the page is rendered but don't wait on the\n    // subscription, we'll just render the items as they arrive\n    onBeforeAction: function () {\n      this.todosHandle = Meteor.subscribe('pomodoro', this.params._id);\n\n      if (this.ready()) {\n        // Handle for launch screen defined in app-body.js\n        dataReadyHold.release();\n      }\n    },\n    data: function () {\n      return Todos.findOne(this.params._id);\n    },\n    action: function () {\n      this.render();\n    }\n});\n\nRouter.route('listsChart',{\n    path: '/chart',\n    // subscribe to todos before the page is rendered but don't wait on the\n    // subscription, we'll just render the items as they arrive\n    onBeforeAction: function () {\n      this.todosHandle = Meteor.subscribe('chart');\n\n      if (this.ready()) {\n        // Handle for launch screen defined in app-body.js\n        dataReadyHold.release();\n      }\n    },\n    data: function () {\n      return Todos.findOne();\n    },\n    action: function () {\n      this.render();\n    }\n});\n\nRouter.route('listsShow', {\n  path: '/lists/:_id',\n  // subscribe to todos before the page is rendered but don't wait on the\n  // subscription, we'll just render the items as they arrive\n  onBeforeAction: function () {\n    this.todosHandle = Meteor.subscribe('todos', this.params._id);\n\n    if (this.ready()) {\n      // Handle for launch screen defined in app-body.js\n      dataReadyHold.release();\n    }\n  },\n  data: function () {\n    return Lists.findOne(this.params._id);\n  },\n  action: function () {\n    this.render();\n  }\n});\n\nRouter.route('home', {\n  path: '/',\n  action: function() {\n    var currentUser = Meteor.userId();\n    var list = {name: \"Change this default list name\", incompleteCount: 0, createdBy: currentUser};\n\n    if (currentUser && Lists.find({createdBy: currentUser}).count() === 0) {\n      return Lists.insert(list);\n    }\n\n    if(currentUser) {\n      Router.go('listsShow', Lists.findOne({ createdBy: currentUser }));\n    } else {\n      Router.go('signup'); \n    }\n\n  }\n});\n\n\nRouter.route('verifyEmail', {\n        path: '/verify-email/:token',\n        action: function() {\n          Accounts.verifyEmail(this.params.token, function () {\n            // var currentUser = Meteor.userId();\n            // var list = {name: \"Change this default list name\", incompleteCount: 0, createdBy: currentUser};\n\n            // if (Lists.find({createdBy: currentUser}).count() === 0) {\n            //   return Lists.insert(list);\n            // } \n\n            Router.go('home');\n          });\n        }\n});"]}