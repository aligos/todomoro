{"version":3,"sources":["meteor://ðŸ’»app/lib/methods.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/lib/methods.js","sourcesContent":["Meteor.methods({\n\taddPomodoro: function( type ) {\n\t\tif ( typeof type == 'undefined' )\n\t\t\ttype = 'pomodoros';\n\t\tif ( ! Meteor.userId() ) {\n\t\t\tif ( Meteor.isClient ) {\n\t\t\t\t//No Session on Server, duh!\n\t\t\t\tvar currentProfile = Session.get( 'profile' );\n\t\t\t\tcurrentProfile[ type ] = currentProfile[ type ] ? currentProfile[ type ] + 1 : 1;\n\t\t\t\tSession.set( 'profile', currentProfile );\n\t\t\t}\n\t\t} else {\n\t\t\tvar fields = { userId: 1, _id: 0 };\n\t\t\tfields[ type ] = 1;\n\t\t\tvar currentProfile = Pomodoros.findOne({ userId: Meteor.userId() }, { fields: fields });\n\t\t\tif ( ! currentProfile ) {\n\t\t\t\tcurrentProfile = { userId: Meteor.userId() };\n\t\t\t}\n\t\t\tcurrentProfile[ type ] = currentProfile[ type ] ? currentProfile[ type ] + 1 : 1;\n\t\t\tPomodoros.upsert( { userId: currentProfile.userId }, { $set: currentProfile } );\n\t\t}\n\n\t},\n\tgetUserProfile: function() {\n\t\treturn Pomodoros.findOne( { userId: Meteor.userId() } );\n\t},\n\tupdateUserProfile: function( userProfile ) {\n\t\tPomodoros.update( { userId: Meteor.userId() }, userProfile );\n\t}\n});\n"]}